<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Development on This Coding Life</title>
    <link>http://andrealmar.com/categories/web-development/</link>
    <description>Recent content in Web Development on This Coding Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andre@y7mail.com (André Almar)</managingEditor>
    <webMaster>andre@y7mail.com (André Almar)</webMaster>
    <copyright>© 2016 Andre Almar, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 29 Apr 2015 16:00:27 -0300</lastBuildDate>
    <atom:link href="http://andrealmar.com/categories/web-development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introdução ao DOM (Document Object Model)</title>
      <link>http://andrealmar.com/2015/04/topicos-em-programacao-web-introducao-ao-dom/</link>
      <pubDate>Wed, 29 Apr 2015 16:00:27 -0300</pubDate>
      <author>andre@y7mail.com (André Almar)</author>
      <guid>http://andrealmar.com/2015/04/topicos-em-programacao-web-introducao-ao-dom/</guid>
      <description>&lt;p&gt;O que é DOM? - DOM significa  DOCUMENT OBJECT MODEL. Ok mas e daí?&lt;/p&gt;

&lt;p&gt;Em termos gerais o DOM é uma API (application programming interface) que serve para interagirmos com documentos HTML e XML.
Provavelmente só esta explicação é um pouco confusa. Mas estamos aqui para explicar isso para você meu caro leitor. Vamos aprender como o DOM é manipulado e como utilizar os métodos corretos em Javascript para manipulá-lo.&lt;/p&gt;

&lt;p&gt;A melhor maneira de pensarmos a respeito do DOM, é que ele é uma árvore de objetos aninhados.
Uma analogia seria: Pense no DOM como uma &lt;em&gt;árvore genealógica&lt;/em&gt;.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrealmar.com/images/genealogical_tree-750x410.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;Cada parte de um documento HTML é representado por um objeto dentro do DOM. O DOM possui objetos para representar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;elementos HTML (tags)&lt;/li&gt;
&lt;li&gt;Texto (conteúdo das tags)&lt;/li&gt;
&lt;li&gt;Estilos (como este texto é apresentado para o usuário)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;assim como objetos mais alto nível, como interação com o usuário através de &amp;ldquo;eventos&amp;rdquo;. O DOM é organizado hierarquicamente, o que significa que um objeto DOM para o elemento &lt;strong&gt;HEAD&lt;/strong&gt;, está embaixo do elemento &lt;strong&gt;HTML&lt;/strong&gt;, que por sua vez está embaixo do objeto &lt;strong&gt;DOCUMENT&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;Document&#39;
  html
    head
      title
        &#39;Árvore DOM&#39;
      script
        &#39;Codigo Javascript&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A melhor maneira de observarmos o DOM é ver como ele imita uma estrutura HTML.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;body&amp;gt;
  div id=&amp;quot;artigo&amp;quot;
    &amp;lt;p&amp;gt;Bla bla bla bla bla&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No exemplo acima a &lt;em&gt;tag&lt;/em&gt; &lt;strong&gt;p&lt;/strong&gt; está aninhada dentro da &lt;em&gt;tag&lt;/em&gt; &lt;strong&gt;div &lt;/strong&gt;que por sua vez está aninhada dentro da &lt;em&gt;tag&lt;/em&gt; &lt;strong&gt;body&lt;/strong&gt;, que por sua vez está aninhada dentro da &lt;em&gt;tag&lt;/em&gt; &lt;strong&gt;html&lt;/strong&gt;.&lt;br /&gt;
Lembra da analogia do DOM com uma árvore genealógica? No DOM nós identificamos estas relações (aninhamentos), justamente como uma árvore genealógica. Uma&lt;em&gt; tag&lt;/em&gt; que está aninhada à outra é chamada de &lt;strong&gt;“filha”&lt;/strong&gt; desta outra &lt;em&gt;tag&lt;/em&gt; que se torna o seu&lt;strong&gt;&amp;ldquo;pai&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var bodyTag = document.body;
var divTag  = document.body.firstChild;
var pTag    = document.body.firstChild.firstChild;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O objeto &lt;em&gt;Document&lt;/em&gt;, representa o conteúdo de um documento HTML. Só que o objeto &lt;em&gt;Document&lt;/em&gt; não é o nível mais superior do DOM. O nível mais superior do DOM é o objeto &lt;b&gt;Window&lt;/b&gt;.
Por conta disso, o objeto &lt;em&gt;Window&lt;/em&gt;, é o escopo &lt;i&gt;global&lt;/i&gt; do DOM - ou seja, qualquer objeto no DOM pertence, ou está contido no objeto &lt;em&gt;Window&lt;/em&gt;. Este objeto &lt;em&gt;Window&lt;/em&gt;, representa uma janela aberta do seu browser (navegador), por exemplo.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrealmar.com/images/objectDocument_objectWindow.png&#34;&gt;
&lt;br /&gt;
&lt;em&gt;Azul = objeto Window (browser)&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Laranja = documento HTML (objeto Document)&lt;/em&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Como já observamos, o DOM não é uma linguagem. O DOM foi desenvolvido para ser independente de qualquer linguagem de programação. Para manipular o DOM usamos uma linguagem de programação. Geralmente em se tratando de programação WEB nós usamos Javascript. Assim nós temos acesso à estrutura, estilo e conteúdo de um documento através do DOM e com o JavaScript poderemos manipulá-los.
Existem muito mais coisas a se falar sobre o nosso prezado DOM. Mas isso fica para outro post.&lt;/p&gt;

&lt;p&gt;See ya!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>